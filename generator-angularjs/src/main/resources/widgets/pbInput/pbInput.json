{
  "id": "pbInput",
  "name": "Input",
  "type": "widget",
  "template": "@pbInput.tpl.html",
  "controller": "@pbInput.ctrl.js",
  "description": "Field where the user can enter information",
  "order": "1",
  "icon": "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 50 20'><g><path fill='#fff' d='M1,19V1h48v18H1z M0,0v20h50V0H0z M6,18v-1H5v1H6z M8,17H7v1h1V17z M7,2v1h1V2H7z M5,3h1V2H5V3z M6,3v14h1 V3H6z '/></g></svg>",
  "properties": [
    {
      "label": "Required",
      "name": "required",
      "help": "In the context of a form container, use $form.$invalid as a Boolean to check form validity in a widget property",
      "type": "boolean",
      "defaultValue": false
    },
    {
      "label" : "Interpret HTML",
      "name" : "allowHTML",
      "help" : "If you choose 'no', HTML code will be escaped instead of being interpreted. If you choose ‘Yes’, this could potentially lead to HTML injections attacks. Please take into account these risks.",
      "type" : "boolean",
      "defaultValue" : false,
      "bond": "constant"
    },
    {
      "label": "Value min length",
      "name": "minLength",
      "help": "In the context of a form container, use $form.$invalid as a Boolean to check form validity in a widget property",
      "type": "integer",
      "defaultValue": "",
      "constraints": {
        "min": "0"
      }
    },
    {
      "label": "Value max length",
      "name": "maxLength",
      "help": "In the context of a form container, use $form.$invalid as a Boolean to check form validity in a widget property",
      "type": "integer",
      "defaultValue": "",
      "constraints": {
        "min": "1"
      }
    },
    {
      "label": "Read-only",
      "name": "readOnly",
      "type": "boolean",
      "defaultValue": false
    },
    {
      "label": "Label hidden",
      "name": "labelHidden",
      "type": "boolean",
      "bond": "constant",
      "defaultValue": false
    },
    {
      "label": "Label",
      "name": "label",
      "type": "text",
      "defaultValue": "Default label",
      "showFor": "properties.labelHidden.value === false",
      "bond": "interpolation"
    },
    {
      "label": "Label position",
      "name": "labelPosition",
      "type": "choice",
      "choiceValues": [
        "left",
        "top"
      ],
      "defaultValue": "top",
      "bond": "constant",
      "showFor": "properties.labelHidden.value === false"
    },
    {
      "label": "Label width",
      "name": "labelWidth",
      "type": "integer",
      "defaultValue": 4,
      "showFor": "properties.labelHidden.value === false",
      "bond": "constant",
      "constraints": {
        "min": "1",
        "max": "12"
      }
    },
    {
      "label": "Placeholder",
      "name": "placeholder",
      "help": "Short hint that describes the expected value",
      "type": "text",
      "bond": "interpolation"
    },
    {
      "label": "Value",
      "name": "value",
      "help": "Read-write binding, initialized or updated by users' input (bi-directional bond)",
      "caption": "Any variable: <i>myData</i> or <i>myData.attribute</i>",
      "type": "text",
      "bond": "variable"
    },
    {
      "label": "Debounce",
      "name": "debounce",
      "help": "Integer value which contains the debounce model update value in milliseconds. A value of 0 triggers an immediate update. Debounce value cannot be changed once initialized.",
      "type": "integer",
      "defaultValue": 0,
      "constraints": {
        "min": "0",
        "step": 100
      }
    },
    {
      "label": "Type",
      "name": "type",
      "help": "In the context of a form container, use $form.$invalid as a Boolean to check form validity in a widget property",
      "type": "choice",
      "choiceValues": [
        "text",
        "number",
        "email",
        "password",
        "url"
      ],
      "bond": "constant",
      "defaultValue": "text"
    },
    {
      "label": "Min value",
      "name": "min",
      "help": "In the context of a form container, use $form.$invalid as a Boolean to check form validity in a widget property",
      "type": "integer",
      "showFor": "properties.type.value === 'number'"
    },
    {
      "label": "Max value",
      "name": "max",
      "help": "In the context of a form container, use $form.$invalid as a Boolean to check form validity in a widget property",
      "type": "integer",
      "showFor": "properties.type.value === 'number'"
    },
    {
      "label": "Step",
      "name": "step",
      "help": "Specifies the legal number intervals between values",
      "type": "integer",
      "showFor": "properties.type.value === 'number'",
      "defaultValue": 1
    }
  ]
}
