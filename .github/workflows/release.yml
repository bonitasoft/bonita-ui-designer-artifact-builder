name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version of the release. Used as tag name.'
        required: true
        default: 'x.y.z'
      dryRun:
        description: 'Run a dry-run release'
        type: boolean
        required: false
        default: false

jobs:
  build:
    name: Release pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
          cache: 'maven'
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          gpg-private-key: ${{ secrets.gpg_private_key }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
          
      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
      
      - name: Build Release 
        run: ./mvnw --batch-mode -Dstyle.color=always release:prepare -DreleaseVersion=${{ github.event.inputs.version }} -DdryRun=${{ github.event.inputs.dryRun }}

            
      - name: Publish
        env:
          MAVEN_USERNAME: ${{ secrets.ossrh_username }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.ossrh_password }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.gpg_passphrase }}
        run: mvn --batch-mode release:perform -DdryRun=${{ github.event.inputs.dryRun }}
        
      - name: Create Release
        uses: ncipollo/release-action@v1
        id: create_release
        with:
          tag: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body: Release ${{ github.event.inputs.version }}
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token